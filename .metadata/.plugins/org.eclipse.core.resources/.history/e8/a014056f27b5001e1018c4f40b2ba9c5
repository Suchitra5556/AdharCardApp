package com.employee.serviceImpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.employee.Repository.EmployeeNamedRepo;
import com.employee.custom.exception.EmployeeNotFoundByIdException;
import com.employee.entity.Employee;
import com.employee.service.EmployeeNamedService;

@Service
public class EmployeeNamedServiceImpl implements EmployeeNamedService {
	
	@Autowired
	private EmployeeNamedRepo employeeNamedRepo;

	@Override
	public List<Employee> getBySalary(Long salary) {
		
		return employeeNamedRepo.findBySalary(salary);
	}

	@Override
	public List<Employee> getByNameOrAddress(String name, String address) {
		return employeeNamedRepo.findByNameOrAddress(name, address);
		 
	}

	@Override
	public Employee getByIdAndName(Integer id, String name) {
		
		return employeeNamedRepo.findByIdAndName(id, name);
	}

	@Override
	public Employee getByAddressAndNameUnOrder(String address, String name) {
		
		return employeeNamedRepo.findByAddressAndNameUnOrder(address, name);
	}

	@Override
	public Employee findByIdAndNameDetailsVarDiff(String empaddress, String empname) {
		
		return employeeNamedRepo.findByIdAndNameDetailsVarDiff(empaddress, empname);
	}

	@Override
	public Long getBySalary(String name) {
		
		return employeeNamedRepo.findBySalary(name);
	}

	@Override
	public List<Object[]> getByAddress(String address) {
		
		return employeeNamedRepo.findByAddress(address);
	}

	@Override
	public List<Employee> getByEmpId(Integer id) {
		try {
		 List<Employee> byEmpId = employeeNamedRepo.findByEmpId(id);
		 	if(byEmpId.isEmpty())
		 	{
		 		throw new EmployeeNotFoundByIdException("Employee is Not Found with given ID"+ id)
		 	}
		}
		catch(EmployeeNotFoundByIdException e)
		{
			
		}
	}

}
